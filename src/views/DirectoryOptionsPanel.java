/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DirectoryOptionsPanel.java
 *
 * Created on Oct 7, 2011, 10:17:48 AM
 */
package views;

import controller.Controller;
import java.io.File;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

import model.Model;

/**
 *
 * @author gq114c
 */
public class DirectoryOptionsPanel extends javax.swing.JPanel implements IUpdateView {

    private Controller controller;
    private DefaultListModel includeListModel, excludeListModel;

    /** Creates new form DirectoryOptionsPanel */
    public DirectoryOptionsPanel() {
	this(null);
    }

    public DirectoryOptionsPanel(Controller controller) {
	this.controller = controller;

	initComponents();
	includeListModel = new DefaultListModel();
	excludeListModel = new DefaultListModel();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addDirectoryChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        includedList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        excludedList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        addToExcludedBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        addToIncludedBtn = new javax.swing.JButton();
        addDirectory = new javax.swing.JButton();
        removeDirectoryBtn = new javax.swing.JButton();

        addDirectoryChooser.setCurrentDirectory(new java.io.File("C:\\"));
            addDirectoryChooser.setDialogTitle("Add a Directory with Movies");
            addDirectoryChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

            includedList.setModel(new javax.swing.AbstractListModel() {
                String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            jScrollPane1.setViewportView(includedList);

            excludedList.setModel(new javax.swing.AbstractListModel() {
                String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            jScrollPane2.setViewportView(excludedList);

            jLabel1.setText("Directories With Movies: ");

            addToExcludedBtn.setText("Add To Excluded >>");
            addToExcludedBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addToExcludedBtnActionPerformed(evt);
                }
            });

            jLabel2.setText("Directories To Exclude:");

            addToIncludedBtn.setText("<< Add To Included");
            addToIncludedBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addToIncludedBtnActionPerformed(evt);
                }
            });

            addDirectory.setText("Add Directory");
            addDirectory.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addDirectoryActionPerformed(evt);
                }
            });

            removeDirectoryBtn.setText("Remove Directory");
            removeDirectoryBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    removeDirectoryBtnActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addToIncludedBtn)
                                .addComponent(addToExcludedBtn)))
                        .addComponent(jLabel1))
                    .addGap(6, 6, 6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(addDirectory)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(removeDirectoryBtn))
            );

            layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(78, 78, 78)
                            .addComponent(addToExcludedBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(addToIncludedBtn))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addDirectory)
                        .addComponent(removeDirectoryBtn)))
            );

            layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        }// </editor-fold>//GEN-END:initComponents

    private void addDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDirectoryActionPerformed
	if (addDirectoryChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
	    controller.getModel().getFilesToInclude().add(addDirectoryChooser.getSelectedFile());
	    updateView();
	}
    }//GEN-LAST:event_addDirectoryActionPerformed

    private void addToExcludedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToExcludedBtnActionPerformed
	List<File> ls = includedList.getSelectedValuesList();
	Model m = controller.getModel();
	for(File f : ls){
	    m.getFilesToInclude().remove(f);
	    m.getFilesToExclude().add(f); 
	}
	updateView(); 
	
    }//GEN-LAST:event_addToExcludedBtnActionPerformed

    private void addToIncludedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToIncludedBtnActionPerformed
	List<File> ls = excludedList.getSelectedValuesList();
	Model m = controller.getModel();
	for(File f : ls){
	    m.getFilesToInclude().add(f);
	    m.getFilesToExclude().remove(f); 
	}
	updateView(); 
    }//GEN-LAST:event_addToIncludedBtnActionPerformed

    private void removeDirectoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDirectoryBtnActionPerformed
	List<File> ls = includedList.getSelectedValuesList();
	Model m = controller.getModel();
	for(File f : ls){
	    m.getFilesToInclude().remove(f);
	}
	updateView(); 
    }//GEN-LAST:event_removeDirectoryBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDirectory;
    private javax.swing.JFileChooser addDirectoryChooser;
    private javax.swing.JButton addToExcludedBtn;
    private javax.swing.JButton addToIncludedBtn;
    private javax.swing.JList excludedList;
    private javax.swing.JList includedList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeDirectoryBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateView() {

	Model m = controller.getModel();
	includeListModel.removeAllElements();
	excludeListModel.removeAllElements();

	for (File p : m.getFilesToExclude()) {
	    excludeListModel.addElement(p);
	}
	excludedList.setModel(excludeListModel);

	for (File p : m.getFilesToInclude()) {
	    includeListModel.addElement(p);
	}
	includedList.setModel(includeListModel);


    }
}
